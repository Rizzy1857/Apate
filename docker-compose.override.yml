version: '3.8'

services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: apate_dev
      POSTGRES_USER: apate_user
      POSTGRES_PASSWORD: apate_dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apate_user -d apate_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - apate-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - apate-network

  # FastAPI backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://apate_user:apate_dev_password@postgres:5432/apate_dev
      REDIS_URL: redis://redis:6379/0
      AI_PROVIDER: stub
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG
    volumes:
      - ./backend:/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apate-network
    restart: unless-stopped

  # Rust protocol service
  rust-protocol:
    build:
      context: ./rust-protocol
      dockerfile: Dockerfile
    ports:
      - "7878:7878"
    environment:
      RUST_LOG: info
    volumes:
      - ./rust-protocol:/app
    networks:
      - apate-network
    restart: unless-stopped

  # Go IoT services
  go-services:
    build:
      context: ./go-services
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      GO_ENV: development
    volumes:
      - ./go-services:/app
    networks:
      - apate-network
    restart: unless-stopped

  # Development tools container
  devtools:
    image: python:3.12-slim
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    command: tail -f /dev/null
    networks:
      - apate-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  apate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
